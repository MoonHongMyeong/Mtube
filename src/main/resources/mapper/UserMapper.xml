<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.moon.Mtube.mapper.UserMapper">

    <select id="toExistEmail" resultType="boolean">
        SELECT EXISTS
        (SELECT email FROM USER WHERE email = #{email})
    </select>

    <select id="getUser" resultMap="me.moon.Mtube.dto.user.UserResponseDto">
        SELECT id, email, name, picture FROM USER WHERE id=#{userId}
    </select>

    <select id="toExistUserById" resultType="boolean">
        SELECT EXISTS
        (SELECT id FROM USER WHERE id=#{id})
    </select>

    <insert id="insertUser" parameterType="me.moon.Mtube.dto.user.UserSaveRequestDto">
        INSERT INTO USER(email, password, name, picture, role, isRemoved, created_date, modified_date)
        VALUES(#{email}, #{password}, #{name}, #{picture}, "USER", "NONE", NOW(), NOW())
    </insert>

    <update id="updateUser">
        UPDATE USER SET name=#{name}, picture=#{picture}
        WHERE id=#{userId}
    </update>

    <select id="validateUser" resultType="boolean">
        SELECT EXISTS
        (SELECT id FROM USER WHERE id=#{userId} AND password=#{encryptPassword})
    </select>

    <update id="changePassword">
        UPDATE USER SET password=#{newPassword}
        WHERE id=#{id}
    </update>

    <delete id="deleteUser">
        DELETE FROM USER WHERE id=#{id}
    </delete>

    <select id="findUserByEmail" resultType="me.moon.Mtube.dto.user.LoginUserDto">
        SELECT * FROM USER
        WHERE email = #{email}
    </select>

    <!-- playlist -->

    <insert id="addUserPlaylist">
        INSERT INTO USER_PLAYLIST_NAME(name, user_id, created_date, modified_date)
        VALUES(#{name}, #{userId}, NOW(), NOW())
    </insert>

    <update id="updateUserPlaylistName">
        UPDATE USER_PLAYLIST_NAME SET name=#{name}, modified_date=NOW()
        WHERE id=#{playlistId}
    </update>

    <delete id="deleteUserPlaylist">
        DELETE FROM USER_PLAYLIST_NAME WHERE id=#{playlistId}
    </delete>

    <!-- playlist in video -->

    <insert id="addPostInUserPlaylist">
        INSERT INTO USER_PLAYLIST(video_post_id, user_playlist_name_id, created_date, modified_date)
        VALUES(#{postId}, #{playlistId}, NOW(), NOW())
    </insert>

    <delete id="deletePostInUserPlaylist">
        DELETE FROM USER_PLAYLIST WHERE video_post_id=#{postId} AND user_playlist_name_id=#{playlistId}
    </delete>

    <!-- copy playlist -->
    <select id="getPlaylistName" resultType="string">
        SELECT name FROM USER_PLAYLIST_NAME
        WHERE id=#{playlistId}
    </select>

    <select id="getPlaylist">
        SELECT id FROM USER_PLAYLIST_NAME
        WHERE user_id=#{userId}
    </select>

    <select id="getPlaylistInPostId">
        SELECT video_post_id FROM USER_PLAYLIST
        WHERE user_id=#{userId} AND user_playlist_name_id=#{playlistId}
    </select>
</mapper>